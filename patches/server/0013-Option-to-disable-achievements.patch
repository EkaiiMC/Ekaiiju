From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Xymb <xymb@endcrystal.me>
Date: Thu, 22 Jun 2023 00:32:36 +0200
Subject: [PATCH] Option to disable achievements


diff --git a/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java b/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java
index ae1dc5b0fdd44535466d5d0a7d6416873d389f0a..484ccbb68375287f1304844ec0461d8054991117 100644
--- a/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java
+++ b/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java
@@ -124,9 +124,11 @@ public class KaiijuWorldConfig {
     }
 
     public boolean enableEntityThrottling = false;
+    public boolean disableAchievements = false;
 
     private void optimizationSettings() {
         enableEntityThrottling = getBoolean("optimization.enable-entity-throttling", enableEntityThrottling);
+        disableAchievements = getBoolean("optimization.disable-achievements", disableAchievements);
     }
 
     public boolean fixVoidTrading = true;
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 3e692020ae1eba46a5f9722d4f2b0ec4ee374d6a..9f4aa984df74c1c0a8da200f247ca5ef7dc9b199 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1128,7 +1128,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
 
     @Override
     public void onInsideBlock(BlockState state) {
-        CriteriaTriggers.ENTER_BLOCK.trigger(this, state);
+        if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.ENTER_BLOCK.trigger(this, state); // Kaiiju
     }
 
     @Override
@@ -1174,9 +1174,9 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
             }
         }
 
-        CriteriaTriggers.TICK.trigger(this);
+        if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.TICK.trigger(this); // Kaiiju
         if (this.levitationStartPos != null) {
-            CriteriaTriggers.LEVITATION.trigger(this, this.levitationStartPos, this.tickCount - this.levitationStartTime);
+            if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.LEVITATION.trigger(this, this.levitationStartPos, this.tickCount - this.levitationStartTime); // Kaiiju
         }
 
         this.trackStartFallingPosition();
@@ -1271,7 +1271,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
             }
 
             if (this.tickCount % 20 == 0) {
-                CriteriaTriggers.LOCATION.trigger(this);
+                if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.LOCATION.trigger(this); // Kaiiju
             }
 
             // CraftBukkit start - initialize oldLevel, fire PlayerLevelChangeEvent, and tick client-sided world border
@@ -1336,7 +1336,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
     @Override
     public void resetFallDistance() {
         if (this.getHealth() > 0.0F && this.startingToFallPosition != null) {
-            CriteriaTriggers.FALL_FROM_HEIGHT.trigger(this, this.startingToFallPosition);
+            if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.FALL_FROM_HEIGHT.trigger(this, this.startingToFallPosition); // Kaiiju
         }
 
         this.startingToFallPosition = null;
@@ -1358,7 +1358,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
             if (this.enteredLavaOnVehiclePosition == null) {
                 this.enteredLavaOnVehiclePosition = this.position();
             } else {
-                CriteriaTriggers.RIDE_ENTITY_IN_LAVA_TRIGGER.trigger(this, this.enteredLavaOnVehiclePosition);
+                if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.RIDE_ENTITY_IN_LAVA_TRIGGER.trigger(this, this.enteredLavaOnVehiclePosition); // Kaiiju
             }
         }
 
@@ -1560,7 +1560,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
 
             this.handleTeamKill(this, entityKilled, ObjectiveCriteria.TEAM_KILL);
             this.handleTeamKill(entityKilled, this, ObjectiveCriteria.KILLED_BY_TEAM);
-            CriteriaTriggers.PLAYER_KILLED_ENTITY.trigger(this, entityKilled, damageSource);
+            if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.PLAYER_KILLED_ENTITY.trigger(this, entityKilled, damageSource); // Kaiiju
         }
     }
 
@@ -1741,7 +1741,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
         this.wonGame = false;
 
         this.respawn((player) -> {
-            CriteriaTriggers.CHANGED_DIMENSION.trigger(player, Level.END, Level.OVERWORLD);
+            if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.CHANGED_DIMENSION.trigger(player, Level.END, Level.OVERWORLD); // Kaiiju
         }, org.bukkit.event.player.PlayerRespawnEvent.RespawnReason.END_PORTAL, true);
     }
 
@@ -2188,14 +2188,14 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
             maindimensionkey1 = resourcekey1;
         }
         // Paper end - Add option for strict advancement dimension checks
-        CriteriaTriggers.CHANGED_DIMENSION.trigger(this, maindimensionkey, maindimensionkey1);
+        if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.CHANGED_DIMENSION.trigger(this, maindimensionkey, maindimensionkey1); // Kaiiju
         if (maindimensionkey != resourcekey || maindimensionkey1 != resourcekey1) {
-            CriteriaTriggers.CHANGED_DIMENSION.trigger(this, resourcekey, resourcekey1);
+            if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.CHANGED_DIMENSION.trigger(this, resourcekey, resourcekey1); // Kaiiju
         }
 
         if (maindimensionkey == Level.NETHER && maindimensionkey1 == Level.OVERWORLD && this.enteredNetherPosition != null) {
             // CraftBukkit end
-            CriteriaTriggers.NETHER_TRAVEL.trigger(this, this.enteredNetherPosition);
+            if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.NETHER_TRAVEL.trigger(this, this.enteredNetherPosition); // Kaiiju
         }
 
         if (maindimensionkey1 != Level.NETHER) { // CraftBukkit
@@ -2273,7 +2273,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
                 {
                     Either<net.minecraft.world.entity.player.Player.BedSleepingProblem, Unit> either = super.startSleepInBed(blockposition, force).ifRight((unit) -> {
                         this.awardStat(Stats.SLEEP_IN_BED);
-                        CriteriaTriggers.SLEPT_IN_BED.trigger(this);
+                        if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.SLEPT_IN_BED.trigger(this); // Kaiiju
                     });
 
                     if (!this.serverLevel().canSleepThroughNights()) {
@@ -2648,7 +2648,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
 
     @Override
     public void triggerRecipeCrafted(RecipeHolder<?> recipe, List<ItemStack> ingredients) {
-        CriteriaTriggers.RECIPE_CRAFTED.trigger(this, recipe.id(), ingredients);
+        if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.RECIPE_CRAFTED.trigger(this, recipe.id(), ingredients); // Kaiiju
     }
 
     @Override
@@ -2795,14 +2795,14 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
             this.levitationStartPos = this.position();
         }
 
-        CriteriaTriggers.EFFECTS_CHANGED.trigger(this, source);
+        if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.EFFECTS_CHANGED.trigger(this, source); // Kaiiju
     }
 
     @Override
     protected void onEffectUpdated(MobEffectInstance effect, boolean reapplyEffect, @Nullable Entity source) {
         super.onEffectUpdated(effect, reapplyEffect, source);
         this.connection.send(new ClientboundUpdateMobEffectPacket(this.getId(), effect, false));
-        CriteriaTriggers.EFFECTS_CHANGED.trigger(this, source);
+        if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.EFFECTS_CHANGED.trigger(this, source); // Kaiiju
     }
 
     @Override
@@ -2819,7 +2819,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
             }
         }
 
-        CriteriaTriggers.EFFECTS_CHANGED.trigger(this, (Entity) null);
+        if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.EFFECTS_CHANGED.trigger(this, (Entity) null); // Kaiiju
     }
 
     @Override
@@ -3421,7 +3421,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
 
     @Override
     protected void updateUsingItem(ItemStack stack) {
-        CriteriaTriggers.USING_ITEM.trigger(this, stack);
+        if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.USING_ITEM.trigger(this, stack); // Kaiiju
         super.updateUsingItem(stack);
     }
 
@@ -3462,7 +3462,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
         Entity entity = item.getOwner();
 
         if (entity != null) {
-            CriteriaTriggers.THROWN_ITEM_PICKED_UP_BY_PLAYER.trigger(this, item.getItem(), entity);
+            if (!this.level().kaiijuConfig.disableAchievements) CriteriaTriggers.THROWN_ITEM_PICKED_UP_BY_PLAYER.trigger(this, item.getItem(), entity); // Kaiiju
         }
 
     }
